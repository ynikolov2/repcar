/*
 * Copyright RepCar AD 2017
 */
//Generated May 2, 2017 2:05:10 PM by Hibernate Tools 5.2.1.Final
package com.repcar.workshop.beans;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.springframework.hateoas.ResourceSupport;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Workshop generated by hbm2java
 */
@Entity
@Table(name = "workshop", catalog = "repcar")
public class Workshop extends ResourceSupport {

	private long workshopId;
	private String workshopName;
	private String workshopAddress;
	private Date created;
	private long parentWorkshopId;
	private String type;
	private String city;
	private String country;
	private String timezone;
	private String email;
	private String telephone;
	private String subscriptionType;
	private Date subscriptionEndDate;
	private String status;
	private Set<Subscription> subscriptions = new HashSet<Subscription>(0);
	private Set<WorkshopSettings> workshopSettings = new HashSet<WorkshopSettings>(0);
	private Set<WorshopDefinedService> worshopDefinedService = new HashSet<WorshopDefinedService>(0);
	private Set<User> users = new HashSet<User>(0);
	private Set<WorkshopCustomer> workshopCustomers = new HashSet<WorkshopCustomer>(0);
	private WorkshopInvoiceDetails workshopInvoiceDetails;
	private Set<Car> cars = new HashSet<Car>(0);

	@JsonCreator
	public Workshop() {
	}

	@JsonCreator
	public Workshop(@JsonProperty("workshopName") String workshopName,
			@JsonProperty("workshopAddress") String workshopAddress, @JsonProperty("created") Date created,
			@JsonProperty("parentWorkshopId") long parentWorkshopId, @JsonProperty("type") String type,
			@JsonProperty("city") String city, @JsonProperty("country") String country,
			@JsonProperty("timezone") String timezone, @JsonProperty("email") String email,
			@JsonProperty("telephone") String telephone, @JsonProperty("subscriptionType") String subscriptionType,
			@JsonProperty("subscriptionEndDate") Date subscriptionEndDate, @JsonProperty("status") String status,
			@JsonProperty("subscriptions") Set<Subscription> subscriptions,
			@JsonProperty("workshopSettings") Set<WorkshopSettings> workshopSettings,
			@JsonProperty("worshopDefinedService") Set<WorshopDefinedService> worshopDefinedService,
			@JsonProperty("users") Set<User> users,
			@JsonProperty("workshopCustomers") Set<WorkshopCustomer> workshopCustomers,
			@JsonProperty("workshopInvoiceDetails") WorkshopInvoiceDetails workshopInvoiceDetails,
			@JsonProperty("cars") Set<Car> cars) {
		this.workshopName = workshopName;
		this.workshopAddress = workshopAddress;
		this.created = created;
		this.parentWorkshopId = parentWorkshopId;
		this.type = type;
		this.city = city;
		this.country = country;
		this.timezone = timezone;
		this.email = email;
		this.telephone = telephone;
		this.subscriptionType = subscriptionType;
		this.subscriptionEndDate = subscriptionEndDate;
		this.status = status;
		this.subscriptions = subscriptions;
		this.workshopSettings = workshopSettings;
		this.worshopDefinedService = worshopDefinedService;
		this.users = users;
		this.workshopCustomers = workshopCustomers;
		this.workshopInvoiceDetails = workshopInvoiceDetails;
		this.cars = cars;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "workshop_id", unique = true, nullable = false)
	public long getWorkshopId() {
		return this.workshopId;
	}

	public void setWorkshopId(long workshopId) {
		this.workshopId = workshopId;
	}

	@Column(name = "workshop_name", nullable = false, length = 45)
	public String getWorkshopName() {
		return this.workshopName;
	}

	public void setWorkshopName(String workshopName) {
		this.workshopName = workshopName;
	}

	@Column(name = "workshop_address", nullable = false)
	public String getWorkshopAddress() {
		return this.workshopAddress;
	}

	public void setWorkshopAddress(String workshopAddress) {
		this.workshopAddress = workshopAddress;
	}

	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "parent_workshop_id")
	public long getParentWorkshopId() {
		return this.parentWorkshopId;
	}

	public void setParentWorkshopId(long parentWorkshopId) {
		this.parentWorkshopId = parentWorkshopId;
	}

	@Column(name = "type", length = 45)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "city", nullable = false, length = 80)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "country", nullable = false, length = 48)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Column(name = "timezone", nullable = false, length = 45)
	public String getTimezone() {
		return this.timezone;
	}

	public void setTimezone(String timezone) {
		this.timezone = timezone;
	}

	@Column(name = "email", length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "telephone", length = 45)
	public String getTelephone() {
		return this.telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	@Column(name = "subscription_type", nullable = false, length = 45)
	public String getSubscriptionType() {
		return this.subscriptionType;
	}

	public void setSubscriptionType(String subscriptionType) {
		this.subscriptionType = subscriptionType;
	}

	@Column(name = "subscription_end_date", nullable = false, length = 10)
	public Date getSubscriptionEndDate() {
		return this.subscriptionEndDate;
	}

	public void setSubscriptionEndDate(Date subscriptionEndDate) {
		this.subscriptionEndDate = subscriptionEndDate;
	}

	@Column(name = "status", nullable = false, length = 20)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workshop_id")
	public Set<Subscription> getSubscriptions() {
		return this.subscriptions;
	}

	public void setSubscriptions(Set<Subscription> subscriptions) {
		this.subscriptions = subscriptions;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "workshop_settings_id")
	public Set<WorkshopSettings> getWorkshopSettings() {
		return this.workshopSettings;
	}

	public void setWorkshopSettings(Set<WorkshopSettings> workshopSettings) {
		this.workshopSettings = workshopSettings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workshop_id")
	public Set<WorshopDefinedService> getWorshopDefinedService() {
		return this.worshopDefinedService;
	}

	public void setWorshopDefinedService(Set<WorshopDefinedService> worshopDefinedService) {
		this.worshopDefinedService = worshopDefinedService;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workshop_id")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workshop_id")
	public Set<WorkshopCustomer> getWorkshopCustomers() {
		return this.workshopCustomers;
	}

	public void setWorkshopCustomers(Set<WorkshopCustomer> workshopCustomers) {
		this.workshopCustomers = workshopCustomers;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "workshop_invoice_details_id")
	public WorkshopInvoiceDetails getWorkshopInvoiceDetails() {
		return this.workshopInvoiceDetails;
	}

	public void setWorkshopInvoiceDetails(WorkshopInvoiceDetails workshopInvoiceDetails) {
		this.workshopInvoiceDetails = workshopInvoiceDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workshop_id")
	public Set<Car> getCars() {
		return this.cars;
	}

	public void setCars(Set<Car> cars) {
		this.cars = cars;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((cars == null) ? 0 : cars.hashCode());
		result = prime * result + ((city == null) ? 0 : city.hashCode());
		result = prime * result + ((country == null) ? 0 : country.hashCode());
		result = prime * result + ((created == null) ? 0 : created.hashCode());
		result = prime * result + ((email == null) ? 0 : email.hashCode());
		result = prime * result + (int) (parentWorkshopId ^ (parentWorkshopId >>> 32));
		result = prime * result + ((status == null) ? 0 : status.hashCode());
		result = prime * result + ((subscriptionEndDate == null) ? 0 : subscriptionEndDate.hashCode());
		result = prime * result + ((subscriptionType == null) ? 0 : subscriptionType.hashCode());
		result = prime * result + ((subscriptions == null) ? 0 : subscriptions.hashCode());
		result = prime * result + ((telephone == null) ? 0 : telephone.hashCode());
		result = prime * result + ((timezone == null) ? 0 : timezone.hashCode());
		result = prime * result + ((type == null) ? 0 : type.hashCode());
		result = prime * result + ((users == null) ? 0 : users.hashCode());
		result = prime * result + ((workshopAddress == null) ? 0 : workshopAddress.hashCode());
		result = prime * result + ((workshopCustomers == null) ? 0 : workshopCustomers.hashCode());
		result = prime * result + (int) (workshopId ^ (workshopId >>> 32));
		result = prime * result + ((workshopInvoiceDetails == null) ? 0 : workshopInvoiceDetails.hashCode());
		result = prime * result + ((workshopName == null) ? 0 : workshopName.hashCode());
		result = prime * result + ((workshopSettings == null) ? 0 : workshopSettings.hashCode());
		result = prime * result + ((worshopDefinedService == null) ? 0 : worshopDefinedService.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (!super.equals(obj))
			return false;
		if (getClass() != obj.getClass())
			return false;
		Workshop other = (Workshop) obj;
		if (cars == null) {
			if (other.cars != null)
				return false;
		} else if (!cars.equals(other.cars))
			return false;
		if (city == null) {
			if (other.city != null)
				return false;
		} else if (!city.equals(other.city))
			return false;
		if (country == null) {
			if (other.country != null)
				return false;
		} else if (!country.equals(other.country))
			return false;
		if (created == null) {
			if (other.created != null)
				return false;
		} else if (!created.equals(other.created))
			return false;
		if (email == null) {
			if (other.email != null)
				return false;
		} else if (!email.equals(other.email))
			return false;
		if (parentWorkshopId != other.parentWorkshopId)
			return false;
		if (status == null) {
			if (other.status != null)
				return false;
		} else if (!status.equals(other.status))
			return false;
		if (subscriptionEndDate == null) {
			if (other.subscriptionEndDate != null)
				return false;
		} else if (!subscriptionEndDate.equals(other.subscriptionEndDate))
			return false;
		if (subscriptionType == null) {
			if (other.subscriptionType != null)
				return false;
		} else if (!subscriptionType.equals(other.subscriptionType))
			return false;
		if (subscriptions == null) {
			if (other.subscriptions != null)
				return false;
		} else if (!subscriptions.equals(other.subscriptions))
			return false;
		if (telephone == null) {
			if (other.telephone != null)
				return false;
		} else if (!telephone.equals(other.telephone))
			return false;
		if (timezone == null) {
			if (other.timezone != null)
				return false;
		} else if (!timezone.equals(other.timezone))
			return false;
		if (type == null) {
			if (other.type != null)
				return false;
		} else if (!type.equals(other.type))
			return false;
		if (users == null) {
			if (other.users != null)
				return false;
		} else if (!users.equals(other.users))
			return false;
		if (workshopAddress == null) {
			if (other.workshopAddress != null)
				return false;
		} else if (!workshopAddress.equals(other.workshopAddress))
			return false;
		if (workshopCustomers == null) {
			if (other.workshopCustomers != null)
				return false;
		} else if (!workshopCustomers.equals(other.workshopCustomers))
			return false;
		if (workshopId != other.workshopId)
			return false;
		if (workshopInvoiceDetails == null) {
			if (other.workshopInvoiceDetails != null)
				return false;
		} else if (!workshopInvoiceDetails.equals(other.workshopInvoiceDetails))
			return false;
		if (workshopName == null) {
			if (other.workshopName != null)
				return false;
		} else if (!workshopName.equals(other.workshopName))
			return false;
		if (workshopSettings == null) {
			if (other.workshopSettings != null)
				return false;
		} else if (!workshopSettings.equals(other.workshopSettings))
			return false;
		if (worshopDefinedService == null) {
			if (other.worshopDefinedService != null)
				return false;
		} else if (!worshopDefinedService.equals(other.worshopDefinedService))
			return false;
		return true;
	}

}