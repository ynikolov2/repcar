package com.repcar.workshop.beans;
// Generated May 2, 2017 2:05:10 PM by Hibernate Tools 5.2.1.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.springframework.hateoas.ResourceSupport;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WorshopDefinedService generated by hbm2java
 */
@Entity
@Table(name = "worshop_defined_service", catalog = "repcar")
public class WorshopDefinedService extends ResourceSupport {

	private long serviceId;
	private Car cars;
	private User user;
	private Workshop workshop;
	private WorkshopCustomer workshopClients;
	private long parentServiceId;
	private Date startDate;
	private Float spendedHours;
	private Date endDate;

	@JsonCreator
	public WorshopDefinedService() {
	}

	@JsonCreator
	public WorshopDefinedService(@JsonProperty("cars") Car cars, @JsonProperty("user") User user,
			@JsonProperty("workshop") Workshop workshop,
			@JsonProperty("workshopClients") WorkshopCustomer workshopClients,
			@JsonProperty("startDate") Date startDate) {
		this.cars = cars;
		this.user = user;
		this.workshop = workshop;
		this.workshopClients = workshopClients;
		this.startDate = startDate;
	}

	public WorshopDefinedService(Car cars, User user, Workshop workshop, WorkshopCustomer workshopClients,
			long parentServiceId, Date startDate, Float spendedHours, Date endDate) {
		this.cars = cars;
		this.user = user;
		this.workshop = workshop;
		this.workshopClients = workshopClients;
		this.parentServiceId = parentServiceId;
		this.startDate = startDate;
		this.spendedHours = spendedHours;
		this.endDate = endDate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "service_id", unique = true, nullable = false)
	public long getServiceId() {
		return this.serviceId;
	}

	public void setServiceId(long serviceId) {
		this.serviceId = serviceId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "car_id", nullable = false)
	public Car getCars() {
		return this.cars;
	}

	public void setCars(Car cars) {
		this.cars = cars;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "workshop_id", nullable = false)
	public Workshop getWorkshop() {
		return this.workshop;
	}

	public void setWorkshop(Workshop workshop) {
		this.workshop = workshop;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "client_id", nullable = false)
	public WorkshopCustomer getWorkshopClients() {
		return this.workshopClients;
	}

	public void setWorkshopClients(WorkshopCustomer workshopClients) {
		this.workshopClients = workshopClients;
	}

	@Column(name = "parent_service_id")
	public long getParentServiceId() {
		return this.parentServiceId;
	}

	public void setParentServiceId(long parentServiceId) {
		this.parentServiceId = parentServiceId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_date", nullable = false, length = 19)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Column(name = "spended_hours", precision = 12, scale = 0)
	public Float getSpendedHours() {
		return this.spendedHours;
	}

	public void setSpendedHours(Float spendedHours) {
		this.spendedHours = spendedHours;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_date", length = 19)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((cars == null) ? 0 : cars.hashCode());
		result = prime * result + ((endDate == null) ? 0 : endDate.hashCode());
		result = prime * result + (int) (parentServiceId ^ (parentServiceId >>> 32));
		result = prime * result + (int) (serviceId ^ (serviceId >>> 32));
		result = prime * result + ((spendedHours == null) ? 0 : spendedHours.hashCode());
		result = prime * result + ((startDate == null) ? 0 : startDate.hashCode());
		result = prime * result + ((user == null) ? 0 : user.hashCode());
		result = prime * result + ((workshop == null) ? 0 : workshop.hashCode());
		result = prime * result + ((workshopClients == null) ? 0 : workshopClients.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (!super.equals(obj))
			return false;
		if (getClass() != obj.getClass())
			return false;
		WorshopDefinedService other = (WorshopDefinedService) obj;
		if (cars == null) {
			if (other.cars != null)
				return false;
		} else if (!cars.equals(other.cars))
			return false;
		if (endDate == null) {
			if (other.endDate != null)
				return false;
		} else if (!endDate.equals(other.endDate))
			return false;
		if (parentServiceId != other.parentServiceId)
			return false;
		if (serviceId != other.serviceId)
			return false;
		if (spendedHours == null) {
			if (other.spendedHours != null)
				return false;
		} else if (!spendedHours.equals(other.spendedHours))
			return false;
		if (startDate == null) {
			if (other.startDate != null)
				return false;
		} else if (!startDate.equals(other.startDate))
			return false;
		if (user == null) {
			if (other.user != null)
				return false;
		} else if (!user.equals(other.user))
			return false;
		if (workshop == null) {
			if (other.workshop != null)
				return false;
		} else if (!workshop.equals(other.workshop))
			return false;
		if (workshopClients == null) {
			if (other.workshopClients != null)
				return false;
		} else if (!workshopClients.equals(other.workshopClients))
			return false;
		return true;
	}

}
