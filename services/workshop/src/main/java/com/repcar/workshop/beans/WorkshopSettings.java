package com.repcar.workshop.beans;
// Generated May 2, 2017 2:05:10 PM by Hibernate Tools 5.2.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;

import org.springframework.hateoas.ResourceSupport;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WorkshopSettings generated by hbm2java
 */
@Entity
@Table(name = "workshop_settings", catalog = "repcar")
public class WorkshopSettings extends ResourceSupport {

	private long settingsId;
	private String workshopLogo;

	public WorkshopSettings() {
	}

	public WorkshopSettings(@JsonProperty("workshop") Workshop workshop,
			@JsonProperty("workshopLogo") String workshopLogo) {
		this.workshopLogo = workshopLogo;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "settings_id", unique = true, nullable = false)
	public long getSettingsId() {
		return this.settingsId;
	}

	public void setSettingsId(long settingsId) {
		this.settingsId = settingsId;
	}

	@Column(name = "workshop_logo", length = 45)
	public String getWorkshopLogo() {
		return this.workshopLogo;
	}

	public void setWorkshopLogo(String workshopLogo) {
		this.workshopLogo = workshopLogo;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + (int) (settingsId ^ (settingsId >>> 32));
		result = prime * result + ((workshopLogo == null) ? 0 : workshopLogo.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (!super.equals(obj))
			return false;
		if (getClass() != obj.getClass())
			return false;
		WorkshopSettings other = (WorkshopSettings) obj;
		if (settingsId != other.settingsId)
			return false;
		if (workshopLogo == null) {
			if (other.workshopLogo != null)
				return false;
		} else if (!workshopLogo.equals(other.workshopLogo))
			return false;
		return true;
	}

}
